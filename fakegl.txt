//void glAccum (GLenum op, GLfloat value);
//void glAlphaFunc (GLenum func, GLclampf ref);
//GLboolean glAreTexturesResident (GLsizei n, const GLuint *textures, GLboolean *residences);
//void glArrayElement (GLint i);
//void glBegin (GLenum mode);
void glBindTexture (GLenum target, GLuint texture);
//void glBitmap (GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap);
void glBlendFunc (GLenum sfactor, GLenum dfactor);
//void glCallList (GLuint list);
//void glCallLists (GLsizei n, GLenum type, const GLvoid *lists);
void glClear (GLbitfield mask);
//void glClearAccum (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void glClearColor (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void glClearDepth (GLclampd depth);
//void glClearIndex (GLfloat c);
void glClearStencil (GLint s);
//void glClipPlane (GLenum plane, const GLdouble *equation);
//void glCopyPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
//void glCopyTexImage1D (GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);
void glCopyTexImage2D (GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
//void glCopyTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void glCullFace (GLenum mode);
//void glDeleteLists (GLuint list, GLsizei range);
void glDeleteTextures (GLsizei n, const GLuint *textures);
void glDepthFunc (GLenum func);
void glDepthMask (GLboolean flag);
void glDepthRange (GLclampd zNear, GLclampd zFar);
void glDisable (GLenum cap);
//void glDisableClientState (GLenum array);
void glDrawArrays (GLenum mode, GLint first, GLsizei count);
//void glDrawBuffer (GLenum mode);
void glDrawElements (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices);
//void glDrawPixels (GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
//void glEdgeFlag (GLboolean flag);
//void glEdgeFlagPointer (GLsizei stride, const GLvoid *pointer);
//void glEdgeFlagv (const GLboolean *flag);
void glEnable (GLenum cap);
void glEnableClientState (GLenum array);
//void glEnd (void);
//void glEndList (void);
//void glFeedbackBuffer (GLsizei size, GLenum type, GLfloat *buffer);
void glFinish (void);
void glFlush (void);
//void glFogf (GLenum pname, GLfloat param);
//void glFogfv (GLenum pname, const GLfloat *params);
//void glFogi (GLenum pname, GLint param);
//void glFogiv (GLenum pname, const GLint *params);
void glFrontFace (GLenum mode);
void glFrustum (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
//GLuint glGenLists (GLsizei range);
void glGenTextures (GLsizei n, GLuint *textures);
void glGetBooleanv (GLenum pname, GLboolean *params);
//void glGetClipPlane (GLenum plane, GLdouble *equation);
//void glGetDoublev (GLenum pname, GLdouble *params);
GLenum glGetError (void);
void glGetFloatv (GLenum pname, GLfloat *params);
void glGetIntegerv (GLenum pname, GLint *params);
//void glGetLightfv (GLenum light, GLenum pname, GLfloat *params);
//void glGetLightiv (GLenum light, GLenum pname, GLint *params);
//void glGetMapdv (GLenum target, GLenum query, GLdouble *v);
//void glGetMapfv (GLenum target, GLenum query, GLfloat *v);
//void glGetMapiv (GLenum target, GLenum query, GLint *v);
//void glGetMaterialfv (GLenum face, GLenum pname, GLfloat *params);
//void glGetMaterialiv (GLenum face, GLenum pname, GLint *params);
//void glGetPixelMapfv (GLenum map, GLfloat *values);
//void glGetPixelMapuiv (GLenum map, GLuint *values);
//void glGetPixelMapusv (GLenum map, GLushort *values);
void glGetPointerv (GLenum pname, GLvoid* *params);
//void glGetPolygonStipple (GLubyte *mask);
const GLubyte * glGetString (GLenum name);
//void glGetTexEnvfv (GLenum target, GLenum pname, GLfloat *params);
//void glGetTexEnviv (GLenum target, GLenum pname, GLint *params);
//void glGetTexGendv (GLenum coord, GLenum pname, GLdouble *params);
//void glGetTexGenfv (GLenum coord, GLenum pname, GLfloat *params);
//void glGetTexGeniv (GLenum coord, GLenum pname, GLint *params);
//void glGetTexImage (GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);
//void glGetTexLevelParameterfv (GLenum target, GLint level, GLenum pname, GLfloat *params);
//void glGetTexLevelParameteriv (GLenum target, GLint level, GLenum pname, GLint *params);
//void glGetTexParameterfv (GLenum target, GLenum pname, GLfloat *params);
//void glGetTexParameteriv (GLenum target, GLenum pname, GLint *params);
void glHint (GLenum target, GLenum mode);

//void glInitNames (void);
//void glInterleavedArrays (GLenum format, GLsizei stride, const GLvoid *pointer);
GLboolean glIsEnabled (GLenum cap);
//GLboolean glIsList (GLuint list);
GLboolean glIsTexture (GLuint texture);

//void glLineStipple (GLint factor, GLushort pattern);
void glLineWidth (GLfloat width);
//void glListBase (GLuint base);
void glLoadIdentity (void);
//void glLoadMatrixd (const GLdouble *m);
void glLoadMatrixf (const GLfloat *m);
//void glLoadName (GLuint name);
//void glLogicOp (GLenum opcode);
//void glMap1d (GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
//void glMap1f (GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
//void glMap2d (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
//void glMap2f (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
//void glMapGrid1d (GLint un, GLdouble u1, GLdouble u2);
//void glMapGrid1f (GLint un, GLfloat u1, GLfloat u2);
//void glMapGrid2d (GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
//void glMapGrid2f (GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
//void glMaterialf (GLenum face, GLenum pname, GLfloat param);
//void glMaterialfv (GLenum face, GLenum pname, const GLfloat *params);
//void glMateriali (GLenum face, GLenum pname, GLint param);
//void glMaterialiv (GLenum face, GLenum pname, const GLint *params);
void glMatrixMode (GLenum mode);
//void glMultMatrixd (const GLdouble *m);
//void glMultMatrixf (const GLfloat *m);
//void glNewList (GLuint list, GLenum mode);
//void glOrtho (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
//void glPassThrough (GLfloat token);
//void glPixelMapfv (GLenum map, GLsizei mapsize, const GLfloat *values);
//void glPixelMapuiv (GLenum map, GLsizei mapsize, const GLuint *values);
//void glPixelMapusv (GLenum map, GLsizei mapsize, const GLushort *values);
//void glPixelStoref (GLenum pname, GLfloat param);
void glPixelStorei (GLenum pname, GLint param);
//void glPixelTransferf (GLenum pname, GLfloat param);
//void glPixelTransferi (GLenum pname, GLint param);
//void glPixelZoom (GLfloat xfactor, GLfloat yfactor);
//void glPointSize (GLfloat size);
//void glPolygonMode (GLenum face, GLenum mode);
void glPolygonOffset (GLfloat factor, GLfloat units);
//void glPolygonStipple (const GLubyte *mask);
//void glPopAttrib (void);
//void glPopClientAttrib (void);
//void glPopMatrix (void);
//void glPopName (void);
//void glPrioritizeTextures (GLsizei n, const GLuint *textures, const GLclampf *priorities);
//void glPushAttrib (GLbitfield mask);
//void glPushClientAttrib (GLbitfield mask);
//void glPushMatrix (void);
//void glPushName (GLuint name);
//
//void glReadBuffer (GLenum mode);
void glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels);
//void glRectd (GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
//void glRectdv (const GLdouble *v1, const GLdouble *v2);
//void glRectf (GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
//void glRectfv (const GLfloat *v1, const GLfloat *v2);
//void glRecti (GLint x1, GLint y1, GLint x2, GLint y2);
//void glRectiv (const GLint *v1, const GLint *v2);
//void glRects (GLshort x1, GLshort y1, GLshort x2, GLshort y2);
//void glRectsv (const GLshort *v1, const GLshort *v2);
//GLint glRenderMode (GLenum mode);
//void glRotated (GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
void glRotatef (GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
//void glScaled (GLdouble x, GLdouble y, GLdouble z);
//void glScalef (GLfloat x, GLfloat y, GLfloat z);
void glScissor (GLint x, GLint y, GLsizei width, GLsizei height);
//void glSelectBuffer (GLsizei size, GLuint *buffer);
//void glShadeModel (GLenum mode);
void glStencilFunc (GLenum func, GLint ref, GLuint mask);
void glStencilMask (GLuint mask);
void glStencilOp (GLenum fail, GLenum zfail, GLenum zpass);
//void glTexImage1D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
void glTexImage2D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
void glTexParameterf (GLenum target, GLenum pname, GLfloat param);
void glTexParameterfv (GLenum target, GLenum pname, const GLfloat *params);
void glTexParameteri (GLenum target, GLenum pname, GLint param);
void glTexParameteriv (GLenum target, GLenum pname, const GLint *params);
//void glTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);
void glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
//void glTranslated (GLdouble x, GLdouble y, GLdouble z);
//void glTranslatef (GLfloat x, GLfloat y, GLfloat z);

void glViewport (GLint x, GLint y, GLsizei width, GLsizei height);

void glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);

void glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
void glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);

void glBindBuffer(GLenum target, GLuint buffer);
void glDeleteBuffers(GLsizei n, const GLuint *buffers);
void glGenBuffers(GLsizei n, GLuint *buffers);
void glBufferData(GLenum target, GLsizeiptr size, const void *data, GLenum usage);
void glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);

void glAttachShader(GLuint program, GLuint shader);
void glBindAttribLocation(GLuint program, GLuint index, const GLchar *name);
void glCompileShader(GLuint shader);
GLuint glCreateProgram(void);
GLuint glCreateShader(GLenum type);
void glDeleteProgram(GLuint program);
void glDeleteShader(GLuint shader);
void glDetachShader(GLuint program, GLuint shader);
void glDisableVertexAttribArray(GLuint index);
void glEnableVertexAttribArray(GLuint index);
void glGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
void glGetProgramiv(GLuint program, GLenum pname, GLint *params);
void glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
void glGetShaderiv(GLuint shader, GLenum pname, GLint *params);
void glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
void glGetShaderSource(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
GLint glGetUniformLocation(GLuint program, const GLchar *name);
void glLinkProgram(GLuint program);
void glShaderSource(GLuint shader, GLsizei count, const GLchar* *string, const GLint *length);
void glUseProgram(GLuint program);
void glUniform1f(GLint location, GLfloat v0);
void glUniform2f(GLint location, GLfloat v0, GLfloat v1);
void glUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void glUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void glUniform1i(GLint location, GLint v0);
void glUniform1fv(GLint location, GLsizei count, const GLfloat *value);
void glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void glValidateProgram(GLuint program);
void glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);

void glBindRenderbufferEXT(GLenum target, GLuint renderbuffer);
void glDeleteRenderbuffersEXT(GLsizei n, const GLuint *renderbuffers);
void glGenRenderbuffersEXT(GLsizei n, GLuint *renderbuffers);
void glRenderbufferStorageEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
void glBindFramebufferEXT(GLenum target, GLuint framebuffer);
void glDeleteFramebuffersEXT(GLsizei n, const GLuint *framebuffers);
void glGenFramebuffersEXT(GLsizei n, GLuint *framebuffers);
GLenum glCheckFramebufferStatusEXT(GLenum target);
void glFramebufferTexture2DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void glFramebufferRenderbufferEXT(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void glGenerateMipmapEXT(GLenum target);

//void glBlitFramebufferEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);

void glBindVertexArray(GLuint array);
void glDeleteVertexArrays(GLsizei n, const GLuint *arrays);
void glGenVertexArrays(GLsizei n, GLuint *arrays);



void glActiveTextureARB(GLenum texture);
void glClientActiveTextureARB(GLenum texture);
